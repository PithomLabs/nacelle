// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hello.proto

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	hello.proto

It has these top-level messages:
	HelloResponse
	HowdyResponse
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HelloResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *HelloResponse) Reset()                    { *m = HelloResponse{} }
func (m *HelloResponse) String() string            { return proto.CompactTextString(m) }
func (*HelloResponse) ProtoMessage()               {}
func (*HelloResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HelloResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type HowdyResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *HowdyResponse) Reset()                    { *m = HowdyResponse{} }
func (m *HowdyResponse) String() string            { return proto.CompactTextString(m) }
func (*HowdyResponse) ProtoMessage()               {}
func (*HowdyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HowdyResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloResponse)(nil), "main.HelloResponse")
	proto.RegisterType((*HowdyResponse)(nil), "main.HowdyResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for HelloService service

type HelloServiceClient interface {
	Hello(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*HelloResponse, error)
}

type helloServiceClient struct {
	cc *grpc.ClientConn
}

func NewHelloServiceClient(cc *grpc.ClientConn) HelloServiceClient {
	return &helloServiceClient{cc}
}

func (c *helloServiceClient) Hello(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*HelloResponse, error) {
	out := new(HelloResponse)
	err := grpc.Invoke(ctx, "/main.HelloService/Hello", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for HelloService service

type HelloServiceServer interface {
	Hello(context.Context, *google_protobuf.Empty) (*HelloResponse, error)
}

func RegisterHelloServiceServer(s *grpc.Server, srv HelloServiceServer) {
	s.RegisterService(&_HelloService_serviceDesc, srv)
}

func _HelloService_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloServiceServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.HelloService/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloServiceServer).Hello(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _HelloService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.HelloService",
	HandlerType: (*HelloServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hello",
			Handler:    _HelloService_Hello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hello.proto",
}

// Client API for HowdyService service

type HowdyServiceClient interface {
	Howdy(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*HowdyResponse, error)
}

type howdyServiceClient struct {
	cc *grpc.ClientConn
}

func NewHowdyServiceClient(cc *grpc.ClientConn) HowdyServiceClient {
	return &howdyServiceClient{cc}
}

func (c *howdyServiceClient) Howdy(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*HowdyResponse, error) {
	out := new(HowdyResponse)
	err := grpc.Invoke(ctx, "/main.HowdyService/Howdy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for HowdyService service

type HowdyServiceServer interface {
	Howdy(context.Context, *google_protobuf.Empty) (*HowdyResponse, error)
}

func RegisterHowdyServiceServer(s *grpc.Server, srv HowdyServiceServer) {
	s.RegisterService(&_HowdyService_serviceDesc, srv)
}

func _HowdyService_Howdy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HowdyServiceServer).Howdy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.HowdyService/Howdy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HowdyServiceServer).Howdy(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _HowdyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.HowdyService",
	HandlerType: (*HowdyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Howdy",
			Handler:    _HowdyService_Howdy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hello.proto",
}

func init() { proto.RegisterFile("hello.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 170 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0x48, 0xcd, 0xc9,
	0xc9, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xc9, 0x4d, 0xcc, 0xcc, 0x93, 0x92, 0x4e,
	0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0x8b, 0x25, 0x95, 0xa6, 0xe9, 0xa7, 0xe6, 0x16, 0x94,
	0x54, 0x42, 0x94, 0x28, 0x69, 0x72, 0xf1, 0x7a, 0x80, 0x74, 0x04, 0xa5, 0x16, 0x17, 0xe4, 0xe7,
	0x15, 0xa7, 0x0a, 0x49, 0x70, 0xb1, 0xe7, 0xa6, 0x16, 0x17, 0x27, 0xa6, 0xa7, 0x4a, 0x30, 0x2a,
	0x30, 0x6a, 0x70, 0x06, 0xc1, 0xb8, 0x60, 0xa5, 0xf9, 0xe5, 0x29, 0x95, 0x84, 0x95, 0x1a, 0xb9,
	0x71, 0xf1, 0x80, 0x4d, 0x0d, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x15, 0x32, 0xe3, 0x62, 0x05,
	0xf3, 0x85, 0xc4, 0xf4, 0x20, 0x8e, 0xd1, 0x83, 0x39, 0x46, 0xcf, 0x15, 0xe4, 0x18, 0x29, 0x61,
	0x3d, 0x90, 0x53, 0xf5, 0x50, 0x9c, 0xa2, 0xc4, 0x00, 0x36, 0x07, 0x64, 0x25, 0xb2, 0x39, 0x20,
	0x3e, 0x41, 0x73, 0x90, 0xdd, 0xa9, 0xc4, 0x90, 0xc4, 0x06, 0x56, 0x66, 0x0c, 0x08, 0x00, 0x00,
	0xff, 0xff, 0x51, 0x86, 0x08, 0x93, 0x1e, 0x01, 0x00, 0x00,
}
